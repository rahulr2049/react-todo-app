{"version":3,"sources":["Todo.js","FormTodo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","todo","index","markTodo","removeTodo","style","textDecoration","isDone","text","variant","onClick","FormTodo","addTodo","useState","value","setValue","Form","onSubmit","e","preventDefault","Group","Label","Control","type","onChange","target","placeholder","Button","App","todos","setTodos","newTodos","splice","className","Card","map","Body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WACnC,OACI,gCACI,sBAAMC,MAAO,CAAEC,eAAgBL,EAAKM,OAAS,eAAiB,IAA9D,SAAqEN,EAAKO,OAC1E,gCACI,wBAAQC,QAAQ,kBAAkBC,QAAS,kBAAMP,EAASD,IAA1D,oBAA6E,IAC7E,wBAAQO,QAAQ,iBAAiBC,QAAS,kBAAMN,EAAWF,IAA3D,2B,gBCLD,SAASS,EAAT,GAAgC,IAAZC,EAAW,EAAXA,QAC/B,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KASA,OACI,eAACC,EAAA,EAAD,CAAMC,SARW,SAAAC,GACjBA,EAAEC,iBACGL,IACLF,EAAQE,GACRC,EAAS,MAIT,UACI,eAACC,EAAA,EAAKI,MAAN,WACI,cAACJ,EAAA,EAAKK,MAAN,UAAY,2CACZ,cAACL,EAAA,EAAKM,QAAN,CAAcC,KAAK,OAAOT,MAAOA,EAAOU,SAAU,SAAAN,GAAC,OAAIH,EAASG,EAAEO,OAAOX,QAAQY,YAAY,oBAEjG,cAACC,EAAA,EAAD,CAAQlB,QAAQ,eAAec,KAAK,SAApC,uB,wBCgCGK,MA5Cf,WACE,MAA0Bf,mBAAS,IAAnC,mBAAOgB,EAAP,KAAcC,EAAd,KAEM3B,EAAW,SAAAD,GACf,IAAM6B,EAAQ,YAAOF,GACrBE,EAAS7B,GAAOK,QAAUwB,EAAS7B,GAAOK,OAC1CuB,EAASC,IAGL3B,EAAa,SAAAF,GACjB,IAAM6B,EAAQ,YAAOF,GACrBE,EAASC,OAAO9B,EAAO,GACvB4B,EAASC,IASX,OACE,qBAAKE,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,2CACA,cAACtB,EAAD,CAAUC,QAVA,SAAAJ,GACd,IAAMuB,EAAQ,sBAAOF,GAAP,CAAc,CAAErB,OAAMD,QAAQ,KAC5CuB,EAASC,MASL,cAACG,EAAA,EAAD,UACGL,EAAMM,KAAI,SAAClC,EAAMC,GAAP,OACT,cAACgC,EAAA,EAAKE,KAAN,UACE,cAAC,EAAD,CAEElC,MAAOA,EACPD,KAAMA,EACNE,SAAUA,EACVC,WAAYA,GAJPF,gBCzBNmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5fcc4213.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Todo = ({ todo, index, markTodo, removeTodo }) => {\n    return (\n        <div>\n            <span style={{ textDecoration: todo.isDone ? \"line-through\" : \"\" }}>{todo.text}</span>\n            <div>\n                <button variant=\"outline-success\" onClick={() => markTodo(index)}>✓</button>{' '}\n                <button variant=\"outline-danger\" onClick={() => removeTodo(index)}>✕</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Todo;","import { useState } from \"react\"\nimport { Button, Form } from 'react-bootstrap';\n\nexport default function FormTodo({ addTodo }) {\n    const [value, setValue] = useState(\"\");\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (!value) return;\n        addTodo(value);\n        setValue(\"\");\n    };\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Form.Group>\n                <Form.Label><b>Add Todo</b></Form.Label>\n                <Form.Control type=\"text\" value={value} onChange={e => setValue(e.target.value)} placeholder=\"Add new todo\" />\n            </Form.Group>\n            <Button variant=\"primary mb-3\" type=\"submit\">\n                Submit\n            </Button>\n        </Form>\n    );\n}","import { useState } from \"react\";\nimport Todo from \"./Todo\";\nimport FormTodo from \"./FormTodo\";\nimport { Card } from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./App.css\"\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n\n  const markTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isDone = !newTodos[index].isDone;\n    setTodos(newTodos);\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  const addTodo = text => {\n    const newTodos = [...todos, { text, isDone: false }];\n    setTodos(newTodos);\n  }\n\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <h1>Todo List</h1>\n        <FormTodo addTodo={addTodo} />\n        <Card>\n          {todos.map((todo, index) => (\n            <Card.Body>\n              <Todo\n                key={index}\n                index={index}\n                todo={todo}\n                markTodo={markTodo}\n                removeTodo={removeTodo}\n              />\n            </Card.Body>\n          ))}\n        </Card>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}